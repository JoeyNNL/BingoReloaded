import io.papermc.paperweight.userdev.ReobfArtifactConfiguration

plugins {
    id 'java'
    id 'io.github.goooler.shadow' version '8.1.7'
    id 'io.papermc.paperweight.userdev' version '2.0.0-beta.17'
    id("xyz.jpenilla.run-paper") version "2.3.1"
}

group = 'io.github.steaf23'
version = '3.2.0'

repositories {
    mavenCentral()
    maven {
        name = "papermc-repo"
        url = "https://repo.papermc.io/repository/maven-public/"
    }
    maven {
        url = 'https://repo.extendedclip.com/content/repositories/placeholderapi/'
    }
    maven {
        url 'https://repo.codemc.io/repository/maven-releases/'
    }
    maven {
        url 'https://repo.codemc.io/repository/maven-snapshots/'
    }
}

dependencies {
    paperweightDevelopmentBundle("io.papermc.paper:dev-bundle:1.21.7-R0.1-SNAPSHOT")
    compileOnly 'me.clip:placeholderapi:2.11.6'
    implementation(project(":PlayerDisplay"))

    //tests
    testImplementation "io.papermc.paper:paper-api:1.21.7-R0.1-SNAPSHOT"
    testImplementation 'org.junit.jupiter:junit-jupiter-engine:5.10.2'
    testImplementation 'com.github.seeseemelk:MockBukkit-v1.21:3.128.0'
}

def targetJavaVersion = 21
java {
    def javaVersion = JavaVersion.toVersion(targetJavaVersion)
    sourceCompatibility = javaVersion
    targetCompatibility = javaVersion
    if (JavaVersion.current() < javaVersion) {
        toolchain.languageVersion = JavaLanguageVersion.of(targetJavaVersion)
    }
}

paperweight.reobfArtifactConfiguration = ReobfArtifactConfiguration.getMOJANG_PRODUCTION()

tasks.withType(JavaCompile).configureEach {
    options.encoding = 'UTF-8'
    options.compilerArgs = ['-Xlint:deprecation']

    if (targetJavaVersion >= 10 || JavaVersion.current().isJava10Compatible()) {
        options.release.set(targetJavaVersion)
    }
}

tasks.jar {
    manifest {
        attributes["paperweight-mappings-namespace"] = "mojang"
    }
}
// Configure shadowJar to include PlayerDisplay
tasks.shadowJar {
    manifest {
        attributes["paperweight-mappings-namespace"] = "mojang"
    }
    
    // Include PlayerDisplay classes in the JAR
    archiveClassifier = null // This makes shadowJar the main artifact
    
    // Relocate to avoid conflicts with other plugins
    relocate 'io.github.steaf23.playerdisplay', 'io.github.steaf23.bingoreloaded.shaded.playerdisplay'
    
    // Minimize JAR size by only including what's needed
    minimize()
}

// Make shadow JAR the default build output
build {
    dependsOn shadowJar
}

// Don't build the regular JAR
jar {
    enabled = false
}

processResources {
    def props = [version: version]
    inputs.properties props
    filteringCharset 'UTF-8'
    filesMatching('plugin.yml') {
        expand props
    }
}

test{
    useJUnitPlatform()
}

tasks {
    runServer {
        // Configure the Minecraft version for our task.
        // This is the only required configuration besides applying the plugin.
        // Your plugin's jar (or shadowJar if present) will be used automatically.
        minecraftVersion("1.21.7")
    }
}